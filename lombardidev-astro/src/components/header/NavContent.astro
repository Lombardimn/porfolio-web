---
const { links, alternative } = Astro.props as { 
  links: Array<{ label: string; href: string, icon?: string }>,
  alternative?: boolean
};
---

<>
  {
    links.map(({ label, href, icon }) => (
      <>
        {
          !alternative
            ? (
              <li class="py-3 w-full last:border-b hover:text-green-500 hover:bg-green-900/20 last:border-b-white las:shadow-md">
                <a
                  aria-current={Astro.url.pathname === href}
                  class:list={[
                    "px-4 py-3 w-full md:py-1 md:px-2 rounded-xl transition-colors ease-in-out duration-300",
                    "md:hover:text-green-500 md:focus:text-green-500",
                    {
                      "md:bg-green-300/30":
                        Astro.url.pathname === href ||
                        (href !== "/" && Astro.url.pathname.startsWith(href)),
                    },
                  ]}
                  href={href}
                >
                  <span>{label}</span>
                </a>
              </>
            )
            : (
              <li>
                <a
                  href={href}
                  class="text-white hover:text-green-500 focus:text-green-500"
                >
                  <span class="sr-only">{label}</span>
                  <i class={`ph-duotone ${icon}`} style="font-size: 32px;" />
                </a>
              </li>
            )
        }
        
      </>
    ))
  }
</>